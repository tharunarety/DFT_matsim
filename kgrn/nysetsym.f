      SUBROUTINE setsym(ibz)
C  ********************************************************************
C  *                                                                  *
C  *  Set up the site group using the point group of the Bravais      *
C  *  lattice generated by ROTM3D.                                    *
C  *                                                                  *
C  ********************************************************************
      USE control_data ; USE lattice ; USE message ; USE symmetry
      IMPLICIT NONE
      CHARACTER(LEN=4), DIMENSION(nq,48) :: symsg
      CHARACTER(LEN=4), DIMENSION(48) :: symelt, smiss
      CHARACTER(LEN=4), DIMENSION(24) :: symelh
      CHARACTER(LEN=4), DIMENSION(12) :: symelr
      REAL(KIND=8), DIMENSION(:,:), ALLOCATABLE :: bsmtr
      REAL(KIND=8), DIMENSION(:), ALLOCATABLE :: rp
      REAL(KIND=8), PARAMETER :: err = 1.d-6
      REAL(KIND=8) :: rpabs, rx, ry, rz
      REAL(KIND=8), DIMENSION(nq,nq) :: rsymx, rsymy, rsymz
      REAL(KIND=8) :: an
      INTEGER :: ibz, irot, iq, iqp, jqq, jq, jqp, isg, i
      INTEGER :: nprpr, ifiq, ifiqp, ifjqp, miss, prnt = 1
C
C     Cubic system
C
      DATA symelt/'E','sigb','C31+','C31-','sigf','sige','C4z+','C4z-',
     . 'C2z','sigx','C2d','C4y-','S64-','S62+','sigy','C4x+','C2c',
     . 'S62-','S63+','siga','C33+','C34-','S4x+','S4y-','I','C2b','S61-'
     .,'S61+','C2f','C2e','S4z-','S4z+','sigz','C2x','sigd','S4y+',
     . 'C34+','C32-','C2y','S4x-','sigc','C32+','C33-','C2a','S63-',
     . 'S64+','C4x-','C4y+'/
C
C     Hexagonal system
C
      DATA symelh/'E','C3+','C3-','C211','C221','C212','sigm',
     .                'c3+','c3-','c211','c221','c212',
     .            'I','R3+','R3-','R211','R221','R212','rigm',
     .                'r3+','r3-','r211','r221','r212'/
C
C     Trigonal system
C
      DATA symelr/'E','C3+','C3-','C2h1','C2h2','C2h3',
     .            'I','s6-','s6+','sig1','sig2','sig3'/
C
      ALLOCATE(iwrot(48),ibzr(48,nq),wqst(nq),iprmt(48,nq))
      ALLOCATE(bsmtr(3,3),rp(3))
C
      DO 9 iq=1,nq
      iprmt(1:48,iq)=iq
      ibzr(1:nrot,iq)=ibzrot(1:nrot)
    9 CONTINUE
C
      DO 10 irot=1,nrot
      IF(ibzrot(irot).NE.0) THEN
      iwrot(irot)=1
C
C     T(i-i')
C
      DO 20 iq=1,nq
      DO 20 iqp=1,nq
      RX=QX(iqp)-QX(iq)
      RY=QY(iqp)-QY(iq)
      RZ=QZ(iqp)-QZ(iq)
C
      RSYMY(iq,iqp)=RY*UGAM(irot,1,-1,-1)+RZ*UGAM(irot,1,-1,0)+
     .              RX*UGAM(irot,1,-1, 1)
      RSYMZ(iq,iqp)=RY*UGAM(irot,1, 0,-1)+RZ*UGAM(irot,1, 0,0)+
     .              RX*UGAM(irot,1, 0, 1)
      RSYMX(iq,iqp)=RY*UGAM(irot,1, 1,-1)+RZ*UGAM(irot,1, 1,0)+
     .              RX*UGAM(irot,1, 1, 1)
   20 CONTINUE
C
C     T(i-i') ~ (j-j') for any i',j'
C
      DO 21 iq=1,nq
      ifiq=0
      DO 22 jq=1,nq
      IF(itq(iq).EQ.itq(jq)) THEN
C
         ifiqp=0
         DO 23 iqp=1,nq
C
         ifjqp=0
         DO 24 jqp=1,nq
         IF(itq(iqp).EQ.itq(jqp)) THEN
            rp(1)=RSYMX(iq,iqp)-(QX(jqp)-QX(jq))
            rp(2)=RSYMY(iq,iqp)-(QY(jqp)-QY(jq))
            rp(3)=RSYMZ(iq,iqp)-(QZ(jqp)-QZ(jq))
C
            rpabs=rp(1)**2+rp(2)**2+rp(3)**2
            IF(rpabs.LT.err) GO TO 26
C
            bsmtr(1,1:3)=BSX(1:3)
            bsmtr(2,1:3)=BSY(1:3)
            bsmtr(3,1:3)=BSZ(1:3)
            CALL GAUSS(3,3,bsmtr,rp)
            DO 25 i=1,3
            an=ANINT(rp(i))
            IF(ABS(rp(i)-an).GT.err) GO TO 24
   25       CONTINUE
   26       ifjqp=1
            GO TO 27
         ENDIF
   24    CONTINUE
C
   27    ifiqp=ifiqp+ifjqp
   23    CONTINUE
C
C        for all iqp=1,nq there is a jqp
C
         IF(ifiqp.EQ.nq) THEN
            ifiq=1
            IF(iq.NE.jq) iprmt(irot,iq)=jq
         ENDIF
      ENDIF
   22 CONTINUE
C
      IF(ifiq.NE.1) ibzr(irot,iq)=0
C
   21 CONTINUE
      ENDIF
   10 CONTINUE
C
      DO 30 iq=1,nq
      WRITE(m6,100) iq
      IF(msgl.NE.0) WRITE(msgio,100) iq 
      isg=0
      nprpr=0
      DO 31 irot=1,nrot
      IF(ibzr(irot,iq).NE.0) THEN
         jq=iprmt(irot,iq)
         nprpr=nprpr+1
         isg=isg+1
         IF(ibz.EQ.4) THEN
            symsg(iq,isg)=symelh(irot)
         ELSEIF(ibz.EQ.7) THEN
            symsg(iq,isg)=symelr(irot)
         ELSE
            symsg(iq,isg)=symelt(irot)
         ENDIF
         IF(prnt.EQ.1) THEN
            jqq=jq
            IF(jq.EQ.0) jqq=iq
            WRITE(m6,110) iq,jqq,symsg(iq,isg)
            IF(msgl.NE.0) WRITE(msgio,110) iq,jqq,symsg(iq,isg)
         ENDIF
      ENDIF
   31 CONTINUE
      wqst(iq)=1.d0/nprpr
C
   30 CONTINUE
C
      miss=0
      DO 40 irot=1,nrot
      IF(ibzrot(irot).NE.0) THEN
         ifiq=1
         DO 41 iq=1,nq
         IF(ibzr(irot,iq).EQ.0) ifiq=0
   41    CONTINUE
C
         IF(ifiq.EQ.0) THEN
            iwrot(irot)=0
            miss=miss+1
            IF(ibz.EQ.4) THEN
               smiss(miss)=symelh(irot)
            ELSEIF(ibz.EQ.7) THEN
               smiss(miss)=symelr(irot)
            ELSE
               smiss(miss)=symelt(irot)
            ENDIF
         ENDIF
      ENDIF
   40 CONTINUE
C
C     Missing symmetry operations
C
      IF(miss.GT.0) THEN
         WRITE(m6,120)
         WRITE(m6,121) smiss(1:miss)
         IF(msgl.GT.0) THEN
           WRITE(msgio,120)
           WRITE(msgio,121) smiss(1:miss)
         ENDIF
      ENDIF
C
      DEALLOCATE(bsmtr,rp)
c      write(m6,'(a)') 'IBZR'
c      write(m6,'(10i3)') ibzr(1:nrot,1:nq)
c      write(m6,'(a)') 'WQST'
c      write(m6,'(10f10.6)') wqst(1:nq)
c      write(m6,'(a)') 'IPRMT'
c      write(m6,'(10i3)') iprmt(1:nrot,1:nq)
c      write(m6,'(a)') 'IBZROT'
c      write(m6,'(10i3)') ibzrot(1:nrot)
c      write(m6,'(a)') 'IMSYMM'
c      write(m6,'(10i3)') imsymm(1:nrot)
c      write(m6,'(10i3)') nrot, nprprt
c      stop
      
C
  100 FORMAT(/,' SETSYM:   Set up the site-group symmetry elements',
     .         ' for IQ= ',i2,/)
  110 FORMAT(11x,'  IQ =',i3,' ---> JQ =',i3,' symmetry: ',a)
  120 FORMAT(/,11X,'The irreducible Brillouin zone will be increased '
     .    /,11X,'by applying the following missing symmetry elements:')
  121 FORMAT(/,8(11x,8(a,2x),/))
      RETURN
      END
      SUBROUTINE GAUSS(NDIM,N,A,B)                                      
      IMPLICIT REAL*8 (A-H,O-Z)                                         
      DIMENSION A(NDIM,NDIM),B(NDIM)
C---------------------------------------------------------------------- 
       DO 100 I1=1,N                                                    
       RMAX=A(I1,I1)                                                    
       NM=I1                                                            
        DO 200 J1=I1,N                                                 
        IF (ABS(A(J1,I1)).LE.ABS(RMAX)) GOTO 200                      
        RMAX=A(J1,I1)                                                   
        NM=J1                                                           
 200    CONTINUE                                                        
         DO 300 J1=1,N                                                  
         VL=A(I1,J1)                                                    
         A(I1,J1)=A(NM,J1)                                              
         A(NM,J1)=VL                                                    
 300     CONTINUE                                                       
       VL=B(I1)                                                         
       B(I1)=B(NM)                                                      
       B(NM)=VL                                                         
       VL1=A(I1,I1)                                                     
        DO 600 J1=1,N                                                   
        A(I1,J1)=A(I1,J1)/VL1                                           
 600    CONTINUE                                                        
       B(I1)=B(I1)/VL1                                                  
        DO 400 J1=1,N                                                   
        IF (J1.EQ.I1) GOTO 400                                          
        VL1=A(J1,I1)                                                    
         DO 500 J2=1,N                                                  
         A(J1,J2)=A(J1,J2)-A(I1,J2)*VL1                                 
 500     CONTINUE                                                       
        B(J1)=B(J1)-B(I1)*VL1                                           
 400    CONTINUE                                                        
 100   CONTINUE                                                         
      RETURN                                                            
      END                                                               
